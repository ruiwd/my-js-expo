{"version":3,"sources":["projectAssets/home/polaroidDrumKit.png","projectAssets/home/polaroidClock.png","projectAssets/home/polaroidGallery.png","projectAssets/drumKit/boom.wav","projectAssets/drumKit/clap.wav","projectAssets/drumKit/hihat.wav","projectAssets/drumKit/kick.wav","projectAssets/drumKit/openhat.wav","projectAssets/drumKit/ride.wav","projectAssets/drumKit/snare.wav","projectAssets/drumKit/tink.wav","projectAssets/drumKit/tom.wav","components/Home/Polaroid.js","components/Home/Home.js","components/DrumKit.js","components/Clock.js","components/Gallery.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Polaroid","props","className","to","project","src","imageSrc","alt","description","Home","useEffect","document","querySelectorAll","forEach","e","randomNumber","Math","floor","random","style","transform","DrumKit","Clock","Gallery","playAudio","data","audio","querySelector","currentTime","play","keyPressed","classList","add","addEventListener","remove","target","getAttribute","keyCode","data-key","Boom","Clap","Hihat","Kick","Openhat","Ride","Snare","Tink","Tom","useState","hours","minutes","seconds","time","updateTime","setInterval","now","Date","getSeconds","getMinutes","getHours","openPanel","toggle","App","path","exact","component","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"kGAAAA,EAAOC,QAAU,IAA0B,6C,mBCA3CD,EAAOC,QAAU,IAA0B,2C,mBCA3CD,EAAOC,QAAU,IAA0B,6C,mBCA3CD,EAAOC,QAAU,IAA0B,kC,mBCA3CD,EAAOC,QAAU,IAA0B,kC,mBCA3CD,EAAOC,QAAU,IAA0B,mC,mBCA3CD,EAAOC,QAAU,IAA0B,kC,mBCA3CD,EAAOC,QAAU,IAA0B,qC,mBCA3CD,EAAOC,QAAU,IAA0B,kC,mBCA3CD,EAAOC,QAAU,IAA0B,mC,mBCA3CD,EAAOC,QAAU,IAA0B,kC,mBCA3CD,EAAOC,QAAU,IAA0B,iC,gNCoB5BC,MAjBf,SAAkBC,GAChB,OACE,yBAAKC,UAAU,eACb,kBAAC,IAAD,CAAMC,GAAE,WAAMF,EAAMG,UAClB,yBACEF,UAAS,WACTG,IAAKJ,EAAMK,SACXC,IAAG,gCAA2BN,EAAMG,QAAjC,eAGP,yBAAKF,UAAS,UACZ,2BAAID,EAAMO,gB,mDC4BHC,MApCf,WAaE,OAZAC,qBAAU,WAENC,SAASC,iBAAiB,sBAAsBC,SAAQ,SAACC,GACvD,IAAIC,EAAeC,KAAKC,MAAsB,GAAhBD,KAAKE,UACnCJ,EAAEK,MAAMC,UAAR,kBAA+BL,EAAe,EAA9C,qCACaA,EAAe,EAD5B,aAMH,IAGD,yBAAKb,UAAU,QACb,yBAAKA,UAAU,aACb,kBAAC,EAAD,CACEE,QAAQ,UACRE,SAAUe,IACVb,YAAY,gDAEd,kBAAC,EAAD,CACEJ,QAAQ,QACRE,SAAUgB,IACVd,YAAY,2CAEd,kBAAC,EAAD,CACEJ,QAAQ,UACRE,SAAUiB,IACVf,YAAY,mE,yJC6FPa,MArHf,WA2CE,OA1CAX,qBAAU,WAENC,SAASC,iBAAiB,UAAUC,SAAQ,SAACC,GAC3C,IAAIC,EAAeC,KAAKC,MAAsB,GAAhBD,KAAKE,UACnCJ,EAAEK,MAAMC,UAAR,kBAA8C,EAAfL,EAAmB,EAAlD,qCACaA,EAAe,EAD5B,WAOJ,IAAMS,EAAY,SAACC,GACjB,IAAIC,EAAQf,SAASgB,cAAT,0BAA0CF,EAA1C,OAEE,OAAVC,IACFA,EAAME,YAAc,EACpBF,EAAMG,QAGR,IAAIC,EAAanB,SAASgB,cAAT,yBAAyCF,EAAzC,OAEE,OAAfK,IACFA,EAAWC,UAAUC,IAAI,WACzBF,EAAWG,iBAAiB,iBAAiB,WAC3CH,EAAWC,UAAUG,OAAO,gBAKlCvB,SAASsB,iBAAiB,SAAS,SAACnB,GAClC,IAAIW,EAAOX,EAAEqB,OAAOC,aAAa,YAEjCZ,EAAUC,MAGZd,SAASsB,iBAAiB,WAAW,SAACnB,GACpC,IAAIW,EAAOX,EAAEuB,QAEbb,EAAUC,QAEX,IAGD,yBAAKvB,UAAU,WACb,sDACA,yBAAKA,UAAU,UACb,2BAAOoC,WAAS,KAAKjC,IAAKkC,MAC1B,2BAAOD,WAAS,KAAKjC,IAAKmC,MAC1B,2BAAOF,WAAS,KAAKjC,IAAKoC,MAC1B,2BAAOH,WAAS,KAAKjC,IAAKqC,MAC1B,2BAAOJ,WAAS,KAAKjC,IAAKsC,MAC1B,2BAAOL,WAAS,KAAKjC,IAAKuC,MAC1B,2BAAON,WAAS,KAAKjC,IAAKwC,MAC1B,2BAAOP,WAAS,KAAKjC,IAAKyC,MAC1B,2BAAOR,WAAS,KAAKjC,IAAK0C,OAE5B,yBAAK7C,UAAU,QACb,yBAAKA,UAAU,gBACb,yBAAKA,UAAU,MAAMoC,WAAS,MAC5B,iCAEF,yBAAKpC,UAAU,SAAf,SAEF,yBAAKA,UAAU,gBACb,yBAAKA,UAAU,MAAMoC,WAAS,MAC5B,iCAEF,yBAAKpC,UAAU,SAAf,SAEF,yBAAKA,UAAU,gBACb,yBAAKA,UAAU,MAAMoC,WAAS,MAC5B,iCAEF,yBAAKpC,UAAU,SAAf,WAEF,yBAAKA,UAAU,gBACb,yBAAKA,UAAU,MAAMoC,WAAS,MAC5B,iCAEF,yBAAKpC,UAAU,SAAf,SAEF,yBAAKA,UAAU,gBACb,yBAAKA,UAAU,MAAMoC,WAAS,MAC5B,iCAEF,yBAAKpC,UAAU,SAAf,aAEF,yBAAKA,UAAU,gBACb,yBAAKA,UAAU,MAAMoC,WAAS,MAC5B,iCAEF,yBAAKpC,UAAU,SAAf,SAEF,yBAAKA,UAAU,gBACb,yBAAKA,UAAU,MAAMoC,WAAS,MAC5B,iCAEF,yBAAKpC,UAAU,SAAf,UAEF,yBAAKA,UAAU,gBACb,yBAAKA,UAAU,MAAMoC,WAAS,MAC5B,iCAEF,yBAAKpC,UAAU,SAAf,SAEF,yBAAKA,UAAU,gBACb,yBAAKA,UAAU,MAAMoC,WAAS,MAC5B,iCAEF,yBAAKpC,UAAU,SAAf,W,QC9CKoB,MAzEf,WAAkB,IAAD,EACY0B,mBAAS,CAClCC,MAAM,IACNC,QAAQ,IACRC,QAAQ,MAJK,mBACRC,EADQ,KACFC,EADE,KAoDf,OA7CA3C,qBAAU,WAmBR4C,aAlBgB,WACd,IAAIC,EAAM,IAAIC,KACVL,EAAUI,EAAIE,aACdP,EAAUK,EAAIG,aACdT,EAAQM,EAAII,WAEZR,EAAU,KACZA,EAAU,IAAMA,GAEdD,EAAU,KACZA,EAAU,IAAMA,GAEdD,EAAQ,KACVA,EAAQ,IAAMA,GAGhBI,EAAW,CAAEJ,QAAOC,UAASC,cAEV,OACpB,IAEHzC,qBAAU,WAENC,SAASgB,cACP,gBACAR,MAAMC,UAFR,mCAGGgC,EAAKD,QAAU,GAAM,IAHxB,QAMAxC,SAASgB,cACP,gBACAR,MAAMC,UAFR,mCAGGgC,EAAKF,QAAU,GAAM,IAHxB,QAMAvC,SAASgB,cACP,cACAR,MAAMC,UAFR,mCAGGgC,EAAKH,MAAQ,GAAM,IAHtB,WAUF,yBAAK/C,UAAU,SACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,SACf,yBAAKA,UAAU,UAAf,UAA4BkD,EAAKH,MAAjC,YAA0CG,EAAKF,QAA/C,YAA0DE,EAAKD,UAC/D,yBAAKjD,UAAU,SACb,yBAAKA,UAAU,cACf,yBAAKA,UAAU,gBACf,yBAAKA,UAAU,iBAEjB,yBAAKA,UAAU,WACb,wBAAIA,UAAU,iBAAd,MACA,wBAAIA,UAAU,gBAAd,KACA,wBAAIA,UAAU,cAAd,KACA,wBAAIA,UAAU,eAAd,SC1BKqB,MAxCf,WASE,OARAb,qBAAU,WACRC,SAASC,iBAAiB,UAAUC,SAAQ,SAAC+C,GAC3CA,EAAU3B,iBAAiB,SAAS,SAACnB,GACnCA,EAAEqB,OAAOJ,UAAU8B,OAAO,iBAM9B,yBAAK3D,UAAU,WACb,yBAAKA,UAAU,aACb,kCACA,oCACA,qCAEF,yBAAKA,UAAU,aACb,mCACA,mCACA,uCAEF,yBAAKA,UAAU,eACb,yCACA,iCACA,qCAEF,yBAAKA,UAAU,cACb,mCACA,kCACA,uCAEF,yBAAKA,UAAU,cACb,mCACA,iCACA,wCCbO4D,G,6KAbX,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,KAAK,cAAcC,OAAK,EAACC,UAAWxD,IAC3C,kBAAC,IAAD,CAAOsD,KAAK,WAAWC,OAAK,EAACC,UAAW5C,IACxC,kBAAC,IAAD,CAAO0C,KAAK,SAASC,OAAK,EAACC,UAAW3C,IACtC,kBAAC,IAAD,CAAOyC,KAAK,WAAWC,OAAK,EAACC,UAAW1C,U,GARhC2C,cCIEC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEF/D,SAASgE,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.6b931723.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/polaroidDrumKit.68910ce1.png\";","module.exports = __webpack_public_path__ + \"static/media/polaroidClock.97378a3d.png\";","module.exports = __webpack_public_path__ + \"static/media/polaroidGallery.55c0c961.png\";","module.exports = __webpack_public_path__ + \"static/media/boom.550be808.wav\";","module.exports = __webpack_public_path__ + \"static/media/clap.a6e86dd7.wav\";","module.exports = __webpack_public_path__ + \"static/media/hihat.4ba39e07.wav\";","module.exports = __webpack_public_path__ + \"static/media/kick.4dd58595.wav\";","module.exports = __webpack_public_path__ + \"static/media/openhat.a62db465.wav\";","module.exports = __webpack_public_path__ + \"static/media/ride.b0d70ec5.wav\";","module.exports = __webpack_public_path__ + \"static/media/snare.80c4129b.wav\";","module.exports = __webpack_public_path__ + \"static/media/tink.75f727ec.wav\";","module.exports = __webpack_public_path__ + \"static/media/tom.572ed39d.wav\";","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Polaroid(props) {\r\n  return (\r\n    <div className=\"polaroidSet\">\r\n      <Link to={`/${props.project}`}>\r\n        <img\r\n          className={`polaroid`}\r\n          src={props.imageSrc}\r\n          alt={`Polaroid: Snapshot of ${props.project} project`}\r\n        />\r\n      </Link>\r\n      <div className={`postIt`}>\r\n        <p>{props.description}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Polaroid;\r\n","import React, { useEffect } from \"react\";\r\nimport Polaroid from \"./Polaroid.js\";\r\nimport DrumKit from \"../../projectAssets/home/polaroidDrumKit.png\";\r\nimport Clock from \"../../projectAssets/home/polaroidClock.png\";\r\nimport Gallery from \"../../projectAssets/home/polaroidGallery.png\";\r\n\r\nfunction Home() {\r\n  useEffect(() => {\r\n    const randomizeLabel = () => {\r\n      document.querySelectorAll(\".polaroid, .postIt\").forEach((e) => {\r\n        let randomNumber = Math.floor(Math.random() * 10);\r\n        e.style.transform = `rotateZ(${randomNumber - 5}deg) \r\n        translateY(${randomNumber / 7}rem)`;\r\n      });\r\n    };\r\n\r\n    randomizeLabel();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"home\">\r\n      <div className=\"scrollDiv\">\r\n        <Polaroid\r\n          project=\"DrumKit\"\r\n          imageSrc={DrumKit}\r\n          description=\"Drums too hard to learn? Here's a shortcut!\"\r\n        />\r\n        <Polaroid\r\n          project=\"Clock\"\r\n          imageSrc={Clock}\r\n          description=\"Just in case you needed another clock.\"\r\n        />\r\n        <Polaroid\r\n          project=\"Gallery\"\r\n          imageSrc={Gallery}\r\n          description=\"An interactive gallery of a few photos I took on my travels\"\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import React, { useEffect } from \"react\";\r\nimport Boom from \"../projectAssets/drumKit/boom.wav\";\r\nimport Clap from \"../projectAssets/drumKit/clap.wav\";\r\nimport Hihat from \"../projectAssets/drumKit/hihat.wav\";\r\nimport Kick from \"../projectAssets/drumKit/kick.wav\";\r\nimport Openhat from \"../projectAssets/drumKit/openhat.wav\";\r\nimport Ride from \"../projectAssets/drumKit/ride.wav\";\r\nimport Snare from \"../projectAssets/drumKit/snare.wav\";\r\nimport Tink from \"../projectAssets/drumKit/tink.wav\";\r\nimport Tom from \"../projectAssets/drumKit/tom.wav\";\r\n\r\nfunction DrumKit() {\r\n  useEffect(() => {\r\n    const randomizeLabel = () => {\r\n      document.querySelectorAll(\".label\").forEach((e) => {\r\n        let randomNumber = Math.floor(Math.random() * 10);\r\n        e.style.transform = `rotateZ(${randomNumber * 2 - 7}deg) \r\n        translateY(${randomNumber / 7}rem)`;\r\n      });\r\n    };\r\n\r\n    randomizeLabel();\r\n\r\n    const playAudio = (data) => {\r\n      let audio = document.querySelector(`audio[data-key='${data}']`);\r\n\r\n      if (audio !== null) {\r\n        audio.currentTime = 0;\r\n        audio.play();\r\n      }\r\n\r\n      let keyPressed = document.querySelector(`.key[data-key='${data}']`);\r\n\r\n      if (keyPressed !== null) {\r\n        keyPressed.classList.add(\"pressed\");\r\n        keyPressed.addEventListener(\"transitionend\", () => {\r\n          keyPressed.classList.remove(\"pressed\");\r\n        });\r\n      }\r\n    };\r\n\r\n    document.addEventListener(\"click\", (e) => {\r\n      let data = e.target.getAttribute(\"data-key\");\r\n\r\n      playAudio(data);\r\n    });\r\n\r\n    document.addEventListener(\"keydown\", (e) => {\r\n      let data = e.keyCode;\r\n\r\n      playAudio(data);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"drumKit\">\r\n      <h2>Just a Simple Drum Kit</h2>\r\n      <div className=\"sounds\">\r\n        <audio data-key=\"65\" src={Boom}></audio>\r\n        <audio data-key=\"83\" src={Clap}></audio>\r\n        <audio data-key=\"68\" src={Hihat}></audio>\r\n        <audio data-key=\"70\" src={Kick}></audio>\r\n        <audio data-key=\"71\" src={Openhat}></audio>\r\n        <audio data-key=\"72\" src={Ride}></audio>\r\n        <audio data-key=\"74\" src={Snare}></audio>\r\n        <audio data-key=\"75\" src={Tink}></audio>\r\n        <audio data-key=\"76\" src={Tom}></audio>\r\n      </div>\r\n      <div className=\"keys\">\r\n        <div className=\"keyContainer\">\r\n          <div className=\"key\" data-key=\"65\">\r\n            <p>A</p>\r\n          </div>\r\n          <div className=\"label\">boom</div>\r\n        </div>\r\n        <div className=\"keyContainer\">\r\n          <div className=\"key\" data-key=\"83\">\r\n            <p>S</p>\r\n          </div>\r\n          <div className=\"label\">clap</div>\r\n        </div>\r\n        <div className=\"keyContainer\">\r\n          <div className=\"key\" data-key=\"68\">\r\n            <p>D</p>\r\n          </div>\r\n          <div className=\"label\">hi hat</div>\r\n        </div>\r\n        <div className=\"keyContainer\">\r\n          <div className=\"key\" data-key=\"70\">\r\n            <p>F</p>\r\n          </div>\r\n          <div className=\"label\">kick</div>\r\n        </div>\r\n        <div className=\"keyContainer\">\r\n          <div className=\"key\" data-key=\"71\">\r\n            <p>G</p>\r\n          </div>\r\n          <div className=\"label\">open hat</div>\r\n        </div>\r\n        <div className=\"keyContainer\">\r\n          <div className=\"key\" data-key=\"72\">\r\n            <p>H</p>\r\n          </div>\r\n          <div className=\"label\">ride</div>\r\n        </div>\r\n        <div className=\"keyContainer\">\r\n          <div className=\"key\" data-key=\"74\">\r\n            <p>J</p>\r\n          </div>\r\n          <div className=\"label\">snare</div>\r\n        </div>\r\n        <div className=\"keyContainer\">\r\n          <div className=\"key\" data-key=\"75\">\r\n            <p>K</p>\r\n          </div>\r\n          <div className=\"label\">tink</div>\r\n        </div>\r\n        <div className=\"keyContainer\">\r\n          <div className=\"key\" data-key=\"76\">\r\n            <p>L</p>\r\n          </div>\r\n          <div className=\"label\">tom</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DrumKit;\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nfunction Clock() {\r\n  const [time, updateTime] = useState({\r\n    hours: `0`,\r\n    minutes: `0`,\r\n    seconds: `0`,\r\n  });\r\n\r\n  useEffect(() => {\r\n    const newTime = () => {\r\n      let now = new Date();\r\n      let seconds = now.getSeconds();\r\n      let minutes = now.getMinutes();\r\n      let hours = now.getHours();\r\n\r\n      if (seconds < 10) {\r\n        seconds = \"0\" + seconds;\r\n      }\r\n      if (minutes < 10) {\r\n        minutes = \"0\" + minutes;\r\n      }\r\n      if (hours < 10) {\r\n        hours = \"0\" + hours;\r\n      }\r\n\r\n      updateTime({ hours, minutes, seconds });\r\n    };\r\n    setInterval(newTime, 1000);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const moveHands = () => {\r\n      document.querySelector(\r\n        \".hand.second\"\r\n      ).style.transform = `translateX(-50%) rotateZ(${\r\n        (time.seconds / 60) * 360\r\n      }deg)`;\r\n\r\n      document.querySelector(\r\n        \".hand.minute\"\r\n      ).style.transform = `translateX(-50%) rotateZ(${\r\n        (time.minutes / 60) * 360\r\n      }deg)`;\r\n\r\n      document.querySelector(\r\n        \".hand.hour\"\r\n      ).style.transform = `translateX(-50%) rotateZ(${\r\n        (time.hours / 12) * 360\r\n      }deg)`;\r\n    };\r\n    moveHands();\r\n  });\r\n\r\n  return (\r\n    <div className=\"clock\">\r\n      <div className=\"clockFace\">\r\n        <div className=\"knob\"></div>\r\n        <div className=\"screen\">{`${time.hours}:${time.minutes}:${time.seconds}`}</div>\r\n        <div className=\"hands\">\r\n          <div className=\"hand hour\"></div>\r\n          <div className=\"hand minute\"></div>\r\n          <div className=\"hand second\"></div>\r\n        </div>\r\n        <div className=\"numbers\">\r\n          <h3 className=\"number twelve\">12</h3>\r\n          <h3 className=\"number three\">3</h3>\r\n          <h3 className=\"number six\">6</h3>\r\n          <h3 className=\"number nine\">9</h3>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Clock;\r\n","import React, { useEffect } from \"react\";\r\n\r\nfunction Gallery() {\r\n  useEffect(() => {\r\n    document.querySelectorAll(\".panel\").forEach((openPanel) => {\r\n      openPanel.addEventListener(\"click\", (e) => {\r\n        e.target.classList.toggle(\"open\");\r\n      });\r\n    });\r\n  });\r\n\r\n  return (\r\n    <div className=\"gallery\">\r\n      <div className=\"panel one\">\r\n        <p>Hey</p>\r\n        <p>Let's</p>\r\n        <p>Dance</p>\r\n      </div>\r\n      <div className=\"panel two\">\r\n        <p>Give</p>\r\n        <p>Take</p>\r\n        <p>Receive</p>\r\n      </div>\r\n      <div className=\"panel three\">\r\n        <p>Experience</p>\r\n        <p>It</p>\r\n        <p>Today</p>\r\n      </div>\r\n      <div className=\"panel four\">\r\n        <p>Give</p>\r\n        <p>All</p>\r\n        <p>You can</p>\r\n      </div>\r\n      <div className=\"panel five\">\r\n        <p>Life</p>\r\n        <p>In</p>\r\n        <p>Motion</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Gallery;\r\n","import React, { Component } from \"react\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport Home from \"./components/Home/Home\";\r\nimport DrumKit from \"./components/DrumKit\";\r\nimport Clock from \"./components/Clock\";\r\nimport Gallery from \"./components/Gallery\";\r\nimport \"./App.css\";\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <Router>\r\n        <Switch>\r\n          <Route path=\"/my-js-expo\" exact component={Home} />\r\n          <Route path=\"/DrumKit\" exact component={DrumKit} />\r\n          <Route path=\"/Clock\" exact component={Clock} />\r\n          <Route path=\"/Gallery\" exact component={Gallery} />\r\n        </Switch>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}